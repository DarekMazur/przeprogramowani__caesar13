var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
const Encrypt = input => {
  // check if empty
  // divide string to array
  // remove special chars
  // 
  const plainTextArray = input.split('');
  const plainTextUniversalChars = [];
  function polishToUniversalLetter(letter) {
    switch (letter) {
      case 'ą':
        return 'a';
      case 'ć':
        return 'c';
      case 'ę':
        return 'e';
      case 'ł':
        return 'l';
      case 'ń':
        return 'n';
      case 'ó':
        return 'o';
      case 'ś':
        return 's';
      case 'ż':
      case 'ź':
        return 'z';
      case 'Ą':
        return 'A';
      case 'Ć':
        return 'C';
      case 'Ę':
        return 'E';
      case 'Ł':
        return 'L';
      case 'Ń':
        return 'N';
      case 'Ó':
        return 'O';
      case 'Ś':
        return 'S';
      case 'Ż':
      case 'Ź':
        return 'Z';
      default:
        return letter;
    }
    ;
  }
  // end of switch
  ;
  // end of function
  plainTextArray.forEach(letter => {
    plainTextUniversalChars.push(polishToUniversalLetter(letter));
  });
  const rot13 = plainText => {
    const encryptionVariable = 13;
    const allLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
    const encryption = [];
    plainText.forEach(letter => {
      if (allLetters.some(el => {
        // console.log(`letter: ${letter.toLowerCase()}
        // el: ${el}`)
        el === letter.toLowerCase();
      })) {
        console.log(letter);
        const letterPosition = allLetters.indexOf(letter);
        if (letterPosition > -1) {
          letter === letter.toUpperCase() ? encryption.push(allLetters[(letterPosition + encryptionVariable) % allLetters.length].toUpperCase()) : encryption.push(allLetters[(letterPosition + encryptionVariable) % allLetters.length]);
        }
      }
    });
    return encryption;
  };
  return rot13(plainTextUniversalChars);
};
exports.default = Encrypt;
